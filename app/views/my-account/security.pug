extends ../layout

block body
  if !isBot(ctx.get('User-Agent')) && isSANB(ctx.query.passkey)
    script(defer, nonce=nonce).
      window.addEventListener(
        "load",
        function load() {
          if (!window.jQuery) return setTimeout(load, 50);
          $(function () {
            $(`#modal-nickname-#{ctx.query.passkey}`).modal("show");
          });
        },
        false
      );

  //- legacy support
  - user.passkeys = Array.isArray(user.passkeys) || [];

  each passkey in user.passkeys
    .modal.fade(
      id=`modal-nickname-${passkey.id}`,
      tabindex="-1",
      role="dialog",
      aria-labelledby=`modal-nickname-${passkey.id}-title`,
      aria-hidden="true"
    )
      .modal-dialog(role="document")
        .modal-content
          .modal-header.text-center.d-block
            h4.d-inline-block.ml-4(id=`modal-nickname-${passkey.id}-title`)= t("Edit Nickname")
            button.close(
              type="button",
              data-dismiss="modal",
              aria-label="Close"
            )
              span(aria-hidden="true") &times;
          .modal-body
            .text-center
              form.ajax-form.confirm-prompt(
                action=l(`/my-account/passkeys/${passkey.id}`),
                method="POST"
              )
                input(type="hidden", name="_method", value="PUT")
                .form-group.floating-label
                  input.form-control(
                    id=`input-${passkey.id}-nickname`,
                    type="text",
                    name="nickname",
                    value=passkey.nickname,
                    placeholder=t("Passkey Nickname")
                  )
                  label(for=`input-${passkey.id}-nickname`)= t("Nickname")
                  p.form-text.small.text-black.text-themed-50= t("Nickname has a max of 150 characters.")
                button.btn.btn-lg.btn-block.btn-success(type="submit")
                  = t("Update Nickname")

  #modal-manage-passkeys.modal.fade(
    tabindex="-1",
    role="dialog",
    aria-labelledby="modal-manage-passkeys-title",
    aria-hidden="true"
  )
    .modal-dialog.modal-xl(role="document")
      .modal-content
        .modal-header.d-block.text-center
          h4#modal-manage-passkeys-title.d-inline-block.ml-4= t("Manage Passkeys")
          button.close(type="button", data-dismiss="modal", aria-label="Close")
            span(aria-hidden="true") &times;
        .modal-body.text-center
          .d-block.d-lg-none.mb-3.text-muted.small
            = "("
            = t("Scroll to the right to see entire table")
            = ")"
          .table-responsive
            table.table.table-hover.table-bordered.table-sm.mb-0
              thead.thead-dark
                tr
                  th(scope="col")= t("Nickname")
                  th(scope="col")= t("Public Key (SHA256)")
                  th(scope="col")= t("Created")
                  th(scope="col")= t("Actions")
              tbody
                if !Array.isArray(user.passkeys) || user.passkeys.length === 0
                  tr
                    td(colspan=4)
                      .alert.alert-info.text-center.mb-0= t("No passkeys exist yet.")
                else
                  each passkey in user.passkeys
                    tr
                      td.align-middle.small.text-monospace= passkey.nickname
                      td.align-middle.text-center.small.text-monospace
                        code.small= passkey.sha256
                      td.align-middle.text-center.dayjs(
                        data-time=new Date(passkey.created_at).getTime()
                      )
                        small= dayjs(passkey.created_at).tz(user.timezone === 'Etc/Unknown' ? 'UTC' : user.timezone).format("M/D/YY h:mm A z")
                      td.align-middle
                        ul.list-inline.mb-0
                          li.list-inline-item
                            button.btn.btn-primary.btn-sm.text-nowrap(
                              data-toggle="modal",
                              data-dismiss="modal",
                              data-target=`#modal-nickname-${passkey.id}`,
                              type="button"
                            )
                              i.fa.fa-pencil
                              = " "
                              = t("Edit Nickname")
                          li.list-inline-item
                            form.ajax-form.confirm-prompt.d-inline-block(
                              action=l(`/my-account/passkeys/${passkey.id}`),
                              method="POST"
                            )
                              input(
                                type="hidden",
                                name="_method",
                                value="DELETE"
                              )
                              button.btn.btn-danger.btn-sm(type="submit")
                                i.fa.fa-trash
                                = " "
                                = t("Remove")

  #modal-delete-account.modal.fade(
    tabindex="-1",
    role="dialog",
    aria-labelledby="modal-delete-account-title",
    aria-hidden="true"
  )
    .modal-dialog(role="document")
      .modal-content
        .modal-header.d-block.text-center
          h4#modal-delete-account-title.d-inline-block.ml-4= t("Delete Account")
          button.close(type="button", data-dismiss="modal", aria-label="Close")
            span(aria-hidden="true") &times;
        .modal-body.text-center
          form.ajax-form.confirm-prompt.mb-0(
            action=l("/my-account"),
            method="POST"
          )
            input(type="hidden", name="_method", value="DELETE")
            if user[config.userFields.hasSetPassword]
              .form-group.floating-label
                input#input-password.form-control.form-control-lg(
                  type="password",
                  autocomplete=config.env === "test" ? "off" : randomstring(),
                  name="password",
                  required
                )
                label(for="input-password")= t("Confirm Password")
            button.btn.btn-danger.btn-lg.btn-block(type="submit")= t("Delete Account")

  #modal-disable-otp.modal.fade(
    tabindex="-1",
    role="dialog",
    aria-labelledby="modal-disable-otp-title",
    aria-hidden="true"
  )
    .modal-dialog(role="document")
      .modal-content
        .modal-header.d-block.text-center
          h4#modal-disable-otp-title.d-inline-block.ml-4= t("Disable OTP")
          button.close(type="button", data-dismiss="modal", aria-label="Close")
            span(aria-hidden="true") &times;
        .modal-body.text-center
          form.ajax-form.confirm-prompt.mb-0(
            action=l(`${config.otpRoutePrefix}/disable`),
            method="POST"
          )
            if user[config.userFields.hasSetPassword]
              .form-group.floating-label
                input#input-password.form-control.form-control-lg(
                  type="password",
                  autocomplete=config.env === "test" ? "off" : randomstring(),
                  name="password",
                  required
                )
                label(for="input-password")= t("Confirm Password")
            button.btn.btn-danger.btn-lg.btn-block(type="submit")= t("Disable OTP")
  .min-vh-80.d-flex.flex-column
    .container.py-3
      .row
        .col
          include ../_breadcrumbs
          .card.border-themed.mb-3
            h2.h6.card-header= t("Delete Account")
            - const domainsWithOtherAdmins = domains.some((d) => d.plan === "team" && d.group === "admin" && d.members.some((m) => m.group === "admin" && m.user.id !== user.id));
            if domainsWithOtherAdmins.length > 0
              .card-body
                .alert.alert-warning.small
                  = t("Before you can delete your account, you must remove yourself as an admin from (or delete) these Team plan domains:")
                ul.small
                  each domain in domainsWithOtherAdmins
                    li: a(
                      href=l(`/my-account/domains/${punycode.toASCII(domain.name)}`),
                      target="_blank"
                    )= domain.name
            else
              .card-body
                .alert.alert-danger.small.mb-0= t("Deleting your account is irreversible.  Please take extreme caution when deleting your account.")
              .card-footer.text-right
                button.btn.btn-danger(
                  data-toggle="modal",
                  data-target="#modal-delete-account",
                  type="button"
                )= t("Delete Account")
          if passport && passport.webauthn
            .card.border-themed.mb-3
              h2.h6.card-header= t("Passkey Authentication")
              .card-body
                h5= t("Configure Passkeys")
                p
                  = t("Passkeys allow you to securely log in without requiring a password and two-factor authentication.")
                  = " "
                  = t("You can validate your identity with touch, facial recognition, device-based password, or PIN.")
                  = " "
                  = t("We allow you to manage up to 30 passkeys at once, so that you can log in with all of your devices with ease.")
                a.btn-webauthn-register.btn.btn-primary.btn-md(
                  href="#",
                  role="button"
                )= t("Add New Passkey")
              .card-footer.text-right
                ul.list-inline.mb-0
                  li.list-inline-item
                    button.btn.btn-primary(
                      data-toggle="modal",
                      data-target="#modal-manage-passkeys",
                      type="button"
                    )= t("Manage Passkeys")
                  li.list-inline-item
                    a.btn.btn-dark(
                      href=l("/faq#do-you-support-passkeys-and-webauthn"),
                      rel="noopener noreferrer",
                      target="_blank"
                    )= t("Learn more")

          if passport && passport.otp
            .card.border-themed.mb-3
              h2.h6.card-header= t("Two-Factor Authentication")
              .card-body
                if user[config.passport.fields.otpEnabled]
                  h5= t("Recovery keys")
                  p= t("Recovery keys allow you to login to your account when you have lost access to your Two-Factor Authentication device or authenticator app.  Download your recovery keys and put them in a safe place to use as a last resort.")
                  form(action=l("/my-account/recovery-keys"), method="POST")
                    button.btn.btn-secondary.btn-lg(type="submit")= t("Download recovery keys")
                  button.btn.btn-danger.btn-lg.mt-3(
                    data-toggle="modal",
                    data-target="#modal-disable-otp",
                    type="button"
                  )= t("Disable OTP")
                else
                  h5= t("Configure One-time Password")
                  p= t('One-time passwords ("OTP") allow you to add a layer of Two-Factor Authentication to your account using a device or authenticator app.  If you lose access to your device or authenticator app, then you can use a recovery key provided to you during configuration.')
                  a.btn.btn-primary.btn-lg(
                    href=l(`${config.otpRoutePrefix}/setup`)
                  )= t("Enable OTP")
              .card-footer.text-right
                a.btn.btn-dark(
                  href="https://en.wikipedia.org/wiki/One-time_password",
                  rel="noopener noreferrer",
                  target="_blank"
                )= t("Learn more")

          .card.border-themed.mb-3
            h2.h6.card-header= t("Session Management")
            .card-body
              if user.sessions.length === 0
                p.mb-0= t("Your session management information is being automatically updated, please check back later.")
              else if user.sessions.length === 1
                p.mb-0!= t("You are logged in with the only active and current session on your account.")
              else
                p.mb-0!= t('You have <span class="notranslate">%d</span> active sessions.', user.sessions.length)
            if user.sessions.length > 1
              .card-footer.text-right
                form.ajax-form.confirm-prompt(
                  action=l("/my-account/invalidate-other-sessions"),
                  method="POST"
                )
                  button.btn.btn-sm.btn-danger(type="submit")= t("Log out from other devices")

          .card.border-themed
            h2.h6.card-header= t("Developer Access")
            .card-body
              .row
                label.control-label.col-md-4.col-form-label.text-md-right= t("API token")
                .col-md-8
                  .input-group
                    input#api-token.form-control(
                      type="text",
                      readonly,
                      value=user[config.userFields.apiToken]
                    )
                    .input-group-append
                      button.btn.btn-primary(
                        type="button",
                        data-toggle="clipboard",
                        data-clipboard-target="#api-token"
                      )
                        i.fa.fa-clipboard
                        = " "
                        = t("Copy")
                  .small.form-text.text-muted= t("Keep your token secure and never share it publicly")
            .card-footer.text-right
              ul.list-inline.mb-0
                li.list-inline-item
                  form.ajax-form.confirm-prompt(action=ctx.path, method="POST")
                    input(type="hidden", name="_method", value="DELETE")
                    button.btn.btn-danger(type="submit")= t("Reset API Token")
                li.list-inline-item
                  a.btn.btn-dark(href=l("/email-api"))= t("Learn more")
    .container
      .row.text-center.my-5
        .col
          a.btn.btn-outline-secondary(href=l("/my-account/profile"))
            if user[config.userFields.hasSetPassword]
              = t("Need to change your password?")
            else
              = t("Need to set a password?")
